{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["Chat","dispatch","useDispatch","React","useEffect","startMessagesListening","stopMessagesListening","Messages","AddMessageForm","messages","useSelector","state","chat","style","height","overflow","map","m","index","Message","key","userName","message","width","borderRadius","src","photo","alt","useState","setMessage","onChange","e","currentTarget","value","disabled","onClick","sendMessage","ChatPage"],"mappings":"iLAcMA,EAAiB,WACrB,IAAMC,EAAWC,cASjB,OAPAC,IAAMC,WAAU,WAEd,OADAH,EAASI,eACF,WACLJ,EAASK,kBAEV,IAGD,6BACE,kBAACC,EAAD,MACA,kBAACC,EAAD,QAKAD,EAAqB,WACzB,IAAME,EAAWC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,YAEjE,OACE,yBAAKI,MAAO,CAAEC,OAAQ,QAASC,SAAU,SACtCN,EAASO,KAAI,SAACC,EAAoBC,GAArB,OACZ,kBAACC,EAAD,CAASC,IAAG,UAAKF,EAAL,YAAcD,EAAEI,UAAYC,QAASL,SAMnDE,EAAkD,SAAC,GAAiB,IAAfG,EAAc,EAAdA,QACzD,OACE,6BACE,yBAAKT,MAAO,CAAEU,MAAO,OAAQC,aAAc,OAASC,IAAKH,EAASI,MAAOC,IAAI,gBAC7E,2BAAIL,EAASD,UACb,6BACA,2BAAIC,EAASA,SACb,+BAKAd,EAA2B,WAAO,IAAD,EACPL,IAAMyB,SAAiB,IADhB,mBAC9BN,EAD8B,KACrBO,EADqB,OAEC1B,IAAMyB,SAA8B,WAFrC,mBAI/B3B,GAJ+B,UAIpBC,eASjB,OACE,6BACE,6BACE,8BAAU4B,SAAU,SAACC,GAAD,OAAOF,EAAWE,EAAEC,cAAcC,QAAQA,MAAOX,KAEvE,6BACE,4BAAQY,UAAU,EAAOC,QAbJ,WACpBb,IAGLrB,EAASmC,YAAYd,IACrBO,EAAW,OAQP,WAQOQ,UAzEY,WACzB,OAAO,kBAACrC,EAAD","file":"static/js/5.c7c362e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ChatMessageType } from '../../api/chat-api';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  sendMessage,\r\n  startMessagesListening,\r\n  stopMessagesListening,\r\n} from '../../redux/chatReducer';\r\nimport { appStateType } from '../../redux/redux-store';\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return <Chat />;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(startMessagesListening());\r\n    return () => {\r\n      dispatch(stopMessagesListening());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Messages />\r\n      <AddMessageForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC = () => {\r\n  const messages = useSelector((state: appStateType) => state.chat.messages);\r\n\r\n  return (\r\n    <div style={{ height: '400px', overflow: 'auto' }}>\r\n      {messages.map((m: ChatMessageType, index: number) => (\r\n        <Message key={`${index}_${m.userName}`} message={m} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <img style={{ width: '80px', borderRadius: '50%' }} src={message!.photo} alt=\"image_photo\" />\r\n      <b>{message!.userName}</b>\r\n      <br />\r\n      <p>{message!.message}</p>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n  const [message, setMessage] = React.useState<string>('');\r\n  const [readyStatus, setReadyStatus] = React.useState<'pending' | 'ready'>('pending');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sendMessageHandler = () => {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    dispatch(sendMessage(message));\r\n    setMessage('');\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n      </div>\r\n      <div>\r\n        <button disabled={false} onClick={sendMessageHandler}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"sourceRoot":""}